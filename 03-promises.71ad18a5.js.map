{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAkBC,SAASC,cAAc,uBACzCC,EAAiBF,SAASC,cAAc,sBACxCE,EAAcH,SAASC,cAAc,wBACrCG,EAAYJ,SAASC,cAAc,yBAEzC,IAAII,EAAQ,EAEZ,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,GAGtCJ,EAAQ,C,SAAEH,EAAUQ,MAAAP,IAGpBG,EAAO,C,SAAEJ,EAAUQ,MAAAP,MAElBA,MAIPJ,EAAUY,iBAAiB,SAAS,SAAUC,GAC5CA,EAAMC,iBAEN,IAAIC,EAAaC,OAAOrB,EAAgBsB,OACpCC,EAAYF,OAAOlB,EAAemB,OAClCE,EAASH,OAAOjB,EAAYkB,OAChChB,EAAQc,EACN,IAAK,IAAIK,EAAW,EAAGA,GAAYD,EAAQC,IAEzClB,EAAckB,EAAUnB,GACrBoB,MAAK,EAAClB,SAAEA,EAAUQ,MAAAW,MACjBC,QAAQC,IAAI,uBAAqBrB,QAAiBmB,OAClDG,EAAAhC,GAASiC,OAAOC,QACd,qBAAqBxB,QAAemB,UAGvCM,OAAM,EAACzB,SAAEA,EAAUQ,MAAAkB,MAClBN,QAAQC,IAAI,sBAAoBrB,QAAe0B,OAC/CJ,EAAAhC,GAASiC,OAAOI,QACd,oBAAoB3B,QAAe0B,UAGzC5B,GAASiB","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst firstDelayInput = document.querySelector('input[name=\"delay\"]');\nconst delayStepInput = document.querySelector('input[name=\"step\"]');\nconst amountInput = document.querySelector('input[name=\"amount\"]');\nconst submitBtn = document.querySelector('button[type=\"submit\"]');\n\nlet timer = 0;\n\nfunction createPromise(position, timer) {\n  return new Promise((resolve, reject) => { \n    setTimeout(() => { \n      const shouldResolve = Math.random() > 0.3;\n    if (shouldResolve) {\n        // Fulfill\n      resolve({ position, timer });\n      } else {\n        // Reject\n      reject({ position, timer });\n      }\n    }, timer);\n  });\n};\n\nsubmitBtn.addEventListener(\"click\", function (event) {\n  event.preventDefault();\n  \n  let firstDelay = Number(firstDelayInput.value); \n  let delayStep = Number(delayStepInput.value);\n  let amount = Number(amountInput.value);\n  timer = firstDelay; \n    for (let position = 1; position <= amount; position++) { \n      \n      createPromise(position, timer)\n        .then(({ position, timer }) => {\n          console.log(`✅ Fulfilled promise ${position} in ${timer}ms`);\n          Notiflix.Notify.success(\n            `Fulfilled promise ${position} in ${timer}ms`\n          );\n        })\n        .catch(({ position, timer }) => {\n          console.log(`❌ Rejected promise ${position} in ${timer}ms`);\n          Notiflix.Notify.failure(\n            `Rejected promise ${position} in ${timer}ms`\n          );\n        });\n      timer += delayStep;\n    };\n});\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$firstDelayInput","document","querySelector","$47d4ff9957288465$var$delayStepInput","$47d4ff9957288465$var$amountInput","$47d4ff9957288465$var$submitBtn","$47d4ff9957288465$var$timer","$47d4ff9957288465$var$createPromise","position","timer1","Promise","resolve","reject","setTimeout","Math","random","timer","addEventListener","event","preventDefault","firstDelay","Number","value","delayStep","amount","position1","then","timer2","console","log","$parcel$interopDefault","Notify","success","catch","timer3","failure"],"version":3,"file":"03-promises.71ad18a5.js.map"}